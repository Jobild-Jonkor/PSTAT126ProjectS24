?ggpairs
?ggplot
install.packages("GGally")
# knit options
knitr::opts_chunk$set(echo = F,
results = 'markup',
fig.width = 4,
fig.height = 3,
fig.align = 'center',
message = F,
warning = F)
# packages
library(tidyverse)
library(faraway)
library(RSQLite)
library(skimr)
library(GGally)
ball <- dbConnect(drv=RSQLite::SQLite(), dbname="../data/database.sqlite")
batting <- dbGetQuery(ball, "
SELECT
sum(ab) AS AT_BAT,
player_id,
sum(r) AS RUNS,
sum(hr) AS HOME_RUNS,
sum(triple) AS TRIPLE,
sum(double) AS DOUBLE,
(sum(h) -  sum(hr) - sum(triple) - sum(double)) AS SINGLES,
sum(bb) AS WALKS,
sum(ibb) AS INT_WALKS,
sum(sb) AS STOLEN_BASES,
sum(hbp) AS HIT_BY_PITCH
FROM
batting
where
year > 2000
group by
player_id
")
sumbat <- batting
batting <- subset(batting,batting[,1]>100)
for (x in 3:11)
{
batting[,x] <- batting[,x] / 1
}
set.seed(5)
batting <- sample_n(batting, 500, replace = FALSE)
players <- dbGetQuery(ball, "
SELECT
player_id,
(weight / POWER(height, 2)) *703 AS BMI,
bats as HAND
FROM
player
")
players <- subset(players, players[,2]>0)
for ( x in 1:17918)
{
if(players[x,2] <= 18.5) {players[x,2] <- "U"}
else if(players[x,2] <= 24.9) {players[x,2] <- "H"}
else if(players[x,2] <= 29.9) {players[x,2] <- "O"}
else {players[x,2] <- "B"}
}
batting <-  merge(batting, players, by="player_id" )
ggpairs()
?ggpairs
ggpairs(batting)
ggpairs(batting, aes(x=DOUBLE, y=RUNS))
ggpairs(batting, aes(x=DOUBLE, y=RUNS))
ggpairs(batting$RUNS, aes(x=DOUBLE, y=RUNS))+
geom_point()+
facet_grid(~RUNS)
theme_set(theme_bw(base_size = 14))
set.seed(0)
dt = data.frame(matrix(rnorm(120, 100, 5), ncol = 6) )
colnames(dt) = c('Salary', paste0('People', 1:5))
### convert data frame from wide to long format
dt_long <- gather(dt, key, value, -Salary)
head(dt_long)
#>      Salary     key     value
#> 1 106.31477 People1  98.87866
#> 2  98.36883 People1 101.88698
#> 3 106.64900 People1 100.66668
#> 4 106.36215 People1 104.02095
#> 5 102.07321 People1  99.71447
#> 6  92.30025 People1 102.51804
### plot
ggplot(dt_long, aes(x = Salary, y = value)) +
geom_point() +
facet_grid(. ~ key)
batting
theme_set(theme_bw(base_size = 14))
set.seed(0)
dt = data.frame(matrix(rnorm(120, 100, 5), ncol = 6) )
colnames(dt) = c('Salary', paste0('People', 1:5))
### convert data frame from wide to long format
dt_long <- gather(dt, key, value, -Salary)
head(dt_long)
#>      Salary     key     value
#> 1 106.31477 People1  98.87866
#> 2  98.36883 People1 101.88698
#> 3 106.64900 People1 100.66668
#> 4 106.36215 People1 104.02095
#> 5 102.07321 People1  99.71447
#> 6  92.30025 People1 102.51804
### plot
ggplot(dt_long, aes(x = Salary, y = value)) +
geom_point() +
facet_grid(. ~ key)
ggplot(batting, colums =2:4) +
geom_point() +
facet_grid()
ggplot(batting, colums =2:4)
ggplot(batting, colums =2:4)
# knit options
knitr::opts_chunk$set(echo = F,
results = 'markup',
fig.width = 4,
fig.height = 3,
fig.align = 'center',
message = F,
warning = F)
# packages
library(tidyverse)
library(faraway)
library(RSQLite)
library(skimr)
library(GGally)
ball <- dbConnect(drv=RSQLite::SQLite(), dbname="../data/database.sqlite")
batting <- dbGetQuery(ball, "
SELECT
sum(ab) AS AT_BAT,
player_id,
sum(r) AS RUNS,
sum(hr) AS HOME_RUNS,
sum(triple) AS TRIPLE,
sum(double) AS DOUBLE,
(sum(h) -  sum(hr) - sum(triple) - sum(double)) AS SINGLES,
sum(bb) AS WALKS,
sum(ibb) AS INT_WALKS,
sum(sb) AS STOLEN_BASES,
sum(hbp) AS HIT_BY_PITCH
FROM
batting
where
year > 2000
group by
player_id
")
sumbat <- batting
batting <- subset(batting,batting[,1]>100)
for (x in 3:11)
{
batting[,x] <- batting[,x] / 1
}
set.seed(5)
batting <- sample_n(batting, 500, replace = FALSE)
players <- dbGetQuery(ball, "
SELECT
player_id,
(weight / POWER(height, 2)) *703 AS BMI,
bats as HAND
FROM
player
")
players <- subset(players, players[,2]>0)
for ( x in 1:17918)
{
if(players[x,2] <= 18.5) {players[x,2] <- "U"}
else if(players[x,2] <= 24.9) {players[x,2] <- "H"}
else if(players[x,2] <= 29.9) {players[x,2] <- "O"}
else {players[x,2] <- "B"}
}
batting <-  merge(batting, players, by="player_id" )
pairs<-ggplot(batting, colums =2:4)
pairs
pairs<-ggplot(batting, colums = 2:4)
pairs
pairs<-ggplot(batting, columns = 2:4)
pairs
pairs<-ggplot(batting, columns = 2:4)
pairs
pairs<-ggpairs(batting, columns = 2:4)
pairs
batting
pairs<-ggpairs(batting, columns = 2:4)
pairs
batting
ggpairs(batting, columns = 2:4)
batting
ggpairs(batting, columns = 2:13)
batting
ggpairs(batting, columns = 2:12)
batting
ggpairs(batting, columns = 2:13)
ggpairs(batting, columns = "RUNS", "DOUBLE", "HOME_RUNS", "WALKS", "HAND")
ggpairs(batting, columns = c("RUNS", "DOUBLE", "HOME_RUNS", "WALKS", "HAND"))
ggpairs(batting, columns = c("DOUBLE", "HOME_RUNS", "WALKS", "HAND"))
ggpairs(batting, columns = c("RUNS", "DOUBLE"))
ggpairs(batting, columns = c("DOUBLE", "TRIPLE"))
ggpairs(batting, columns = c("DOUBLE", "TRIPLE", "SINGLES", "WALKS"))
key <- ggpairs(batting, columns = c("DOUBLE", "TRIPLE", "SINGLES", "WALKS"))
key[1]
key <- ggpairs(batting, mapping = aes(color = sex), columns = c("DOUBLE", "TRIPLE", "SINGLES", "WALKS"))
key <- ggpairs(batting, mapping = aes(color = "HAND"), columns = c("DOUBLE", "TRIPLE", "SINGLES", "WALKS"))
key
key <- ggpairs(batting, columns = c("DOUBLE", "TRIPLE", "SINGLES", "WALKS"))
key
key <- ggpairs(batting, columns = 2:13)
key
key <- ggpairs(batting, columns = 2:13)
key
key <- ggpairs(batting, columns = 2:13)
key
key <- ggpairs(batting, columns = 2:13)
key
install.packages("minqa")
install.packages("minqa")
install.packages("minqa")
