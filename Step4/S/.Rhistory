edge.color = "gray60",
edge.arrow.size = 0.2,
edge.curved = 0.5,
mark.groups = list(V(congress_sub1)[cc1$membership==1],
V(congress_sub1)[cc1$membership==2],
V(congress_sub1)[cc1$membership==3],
V(congress_sub1)[cc1$membership==4]),
mark.col="gray90", mark.border="black")
V(congress_sub1)[cc1$membership==1]$party # all Republican
V(congress_sub1)[cc1$membership==3]$party # all Dem except 1 R
V(congress_sub1)[cc1$membership==2]$party # mixed
V(congress_sub1)[cc1$membership==2]$chamber # mostly senate
V(congress_sub1)[cc1$membership==2]$state
# og sub2 graph
no_marg <- c(0,0,0,0)
par(mar=no_marg)
plot(congress_sub2,
vertex.color="orange",
vertex.label.color = "black",
vertex.size = 5,
edge.arrow.size = 0.2,
vertex.label.cex = 0.5)
# sub2 communities by chamber
V(congress_sub2)$community <- V(congress_sub2)$chamber
mycomcols <- c("Senate" ="orange", "House" ="pink")
mylabcols <- c("Senate"="black","House" ="black")
V(congress_sub2)$color <- mycomcols[V(congress_sub2)$community]
V(congress_sub2)$label.color <- mylabcols[V(congress_sub2)$community]
par(mar=no_marg)
plot(congress_sub2,
vertex.size = 5,
vertex.color = V(congress_sub2)$color,
vertex.label.color = V(congress_sub2)$label.color,
vertex.label.family = "Helvetica",
vertex.frame.color = "black",
vertex.label.cex= 0.5,
edge.color = "gray60",
edge.arrow.size = 0.2,
edge.curved = 0.5,
mark.groups = list(V(congress_sub2)$chamber == "Senate",
V(congress_sub2)$chamber == "House"),
mark.col="gray90", mark.border="black")
# sub2 communities by party
V(congress_sub2)$community <- V(congress_sub2)$party
mycomcols <- c(D ="blue", R ="red")
mylabcols <- c(D="white", R="white")
V(congress_sub2)$color <- mycomcols[V(congress_sub2)$community]
V(congress_sub2)$label.color <- mylabcols[V(congress_sub2)$community]
par(mar=no_marg)
plot(congress_sub2,
vertex.size = 5,
vertex.color = V(congress_sub2)$color,
vertex.label.color = V(congress_sub2)$label.color,
vertex.label.family = "Helvetica",
vertex.frame.color = "black",
vertex.label.cex= 0.3,
edge.color = "gray60",
edge.arrow.size = 0.2,
edge.curved = 0.5,
mark.groups = list(V(congress_sub2)$party == "D",
V(congress_sub2)$party == "R"),
mark.col="gray90", mark.border="black")
#V(congress_sub1)[21]$first_last
#Fast Greedy Subgraph 2
und_con2 <- as.undirected(congress_sub2)
cc2 <- cluster_fast_greedy(und_con2)
#Subgraph 2 Metrics
length(cc2) # 5 communities
sizes(cc2) # 1 person in group 5
modularity(cc2) # 0.36 less cohesive than sub1
# Fast Greedy Subgraph 2
V(congress_sub2)$community <- cc2$membership
mycomcols <- c("blue", "orange","red","pink", "purple") # orange is mostly senate
mylabcols <- c("black", "black", "black", "white")
V(congress_sub2)$color <- mycomcols[V(congress_sub2)$community]
V(congress_sub2)$label.color <- mylabcols[V(congress_sub2)$community]
par(mar=no_marg)
plot(congress_sub2,
vertex.size = 5,
vertex.color = V(congress_sub2)$color,
vertex.label.color = V(congress_sub2)$label.color,
vertex.label.family = "Helvetica",
vertex.frame.color = "white",
vertex.label.cex= 0.4,
edge.color = "gray60",
edge.arrow.size = 0.2,
edge.curved = 0.5,
mark.groups = list(V(congress_sub2)[cc2$membership==1],
V(congress_sub2)[cc2$membership==2],
V(congress_sub2)[cc2$membership==3],
V(congress_sub2)[cc2$membership==4],
V(congress_sub2)[cc2$membership==5]),
mark.col="gray90", mark.border="black")
# og sub3 graph
no_marg <- c(0,0,0,0)
par(mar=no_marg)
plot(congress_sub3,
vertex.color = "orange",
vertex.size = 5,
edge.arrow.size = 0.2,
vertex.label.cex = 0.4)
# sub3 communities by chamber
V(congress_sub3)$community <- V(congress_sub3)$chamber
mycomcols <- c("Senate" ="orange", "House" ="pink")
mylabcols <- c("Senate"="black","House" ="black")
V(congress_sub3)$color <- mycomcols[V(congress_sub3)$community]
V(congress_sub3)$label.color <- mylabcols[V(congress_sub3)$community]
par(mar=no_marg)
plot(congress_sub3,
vertex.size = 5,
vertex.color = V(congress_sub3)$color,
vertex.label.color = V(congress_sub3)$label.color,
vertex.label.family = "Helvetica",
vertex.frame.color = "black",
vertex.label.cex= 0.3,
edge.color = "gray60",
edge.arrow.size = 0.2,
edge.curved = 0.5,
mark.groups = list(V(congress_sub3)$chamber == "Senate",
V(congress_sub3)$chamber == "House"),
mark.col="gray90", mark.border="black")
# Sub3 communities by party
V(congress_sub3)$community <- V(congress_sub3)$party
mycomcols <- c(D ="blue", R ="red")
mylabcols <- c(D="white", R="white")
V(congress_sub3)$color <- mycomcols[V(congress_sub3)$community]
V(congress_sub3)$label.color <- mylabcols[V(congress_sub3)$community]
par(mar=no_marg)
plot(congress_sub3,
vertex.size = 5,
vertex.color = V(congress_sub3)$color,
vertex.label.color = V(congress_sub3)$label.color,
vertex.label.family = "Helvetica",
vertex.frame.color = "black",
vertex.label.cex= 0.4,
edge.color = "gray60",
edge.arrow.size = 0.2,
edge.curved = 0.5,
mark.groups = list(V(congress_sub3)$party == "D",
V(congress_sub3)$party == "R"),
mark.col="gray90", mark.border="black")
# og sub4 graph
no_marg <- c(0,0,0,0)
par(mar=no_marg)
plot(congress_sub4,
vertex.color = "orange",
vertex.label.color = "black",
vertex.size = 5,
edge.arrow.size = 0.2,
vertex.label.cex = 0.4)
# sub4 communities by chamber
V(congress_sub4)$community <- V(congress_sub4)$chamber
mycomcols <- c("Senate" ="orange", "House" ="pink")
mylabcols <- c("Senate"="black","House" ="black")
V(congress_sub4)$color <- mycomcols[V(congress_sub4)$community]
V(congress_sub4)$label.color <- mylabcols[V(congress_sub4)$community]
par(mar=no_marg)
plot(congress_sub4,
vertex.size = 5,
vertex.color = V(congress_sub4)$color,
vertex.label.color = V(congress_sub4)$label.color,
vertex.label.family = "Helvetica",
vertex.frame.color = "black",
vertex.label.cex= 0.3,
edge.color = "gray60",
edge.arrow.size = 0.2,
edge.curved = 0.5,
mark.groups = list(V(congress_sub4)$chamber == "Senate",
V(congress_sub4)$chamber == "House"),
mark.col="gray90", mark.border="black")
# Sub4 communities by party
V(congress_sub4)$community <- V(congress_sub4)$party
mycomcols <- c(D ="blue", R ="red")
mylabcols <- c(D="white", R="white")
V(congress_sub4)$color <- mycomcols[V(congress_sub4)$community]
V(congress_sub4)$label.color <- mylabcols[V(congress_sub4)$community]
par(mar=no_marg)
plot(congress_sub4,
vertex.size = 5,
vertex.color = V(congress_sub4)$color,
vertex.label.color = V(congress_sub4)$label.color,
vertex.label.family = "Helvetica",
vertex.frame.color = "black",
vertex.label.cex= 0.4,
edge.color = "gray60",
edge.arrow.size = 0.2,
edge.curved = 0.5,
mark.groups = list(V(congress_sub4)$party == "D",
V(congress_sub4)$party == "R"),
mark.col="gray90", mark.border="black")
# 535 members of congress, 475 in data set
# look at youngest
# Network Metrics - directed
#degree(congress.igraph, mode="in")
edge_density(congress.igraph) # 0.05901843, low
reciprocity(congress.igraph) # 0.461469, less than 50%
dyad_census(congress.igraph) # more assymmetric than mutual connections
transitivity(congress.igraph) # 0.269535, pretty low; low connectivity
mean_distance(congress.igraph) #2.357161, pretty low
diameter(congress.igraph) # 6, longest shortest path between nodes
farthest_vertices(congress.igraph) # 2 outliers of distance 6, still pretty close
# Claudia Tenney (House, R, NY, 63) and Gregoro Sablan (House, D, MP, 69)
is.connected(congress.igraph, "weak") # nope
components(congress.igraph, "strong") # 7, a decent amount of groups; more than # of parties, less than states; regions of US?
articulation_points(congress.igraph) # no vulnerability points; not hierarchical; makes sense for our data
sort(degree_distribution(congress.igraph))
transitivity(congress.igraph, "local") # no one w/ one, no one the center of a triangle, makes sense for our data
# oldest rep degree - "Grace Napolitano" == 49
V(congress.igraph)[V(congress.igraph)$first_last =="Grace Napolitano"] # how to get number if have name
degree(congress.igraph, mode ="in")[348] # 34
degree(congress.igraph, mode ="out")[348] #15
# oldest senator in dataset (excluding Pelosi)
V(congress.igraph)[V(congress.igraph)$first_last =="Ben Cardin"]
degree(congress.igraph)[13] # 62
degree(congress.igraph, mode = "in")[13] # 37
degree(congress.igraph, mode = "out")[13] # 25
sort(degree(congress.igraph)) # figure out how to get specific node degree
V(congress.igraph)[degree(congress.igraph)==max(degree(congress.igraph))] # Kevin McCarthy (House, R, CA, 59)
V(congress.igraph)$state[323]
degree(congress.igraph, mode ="in")[323] # McCarthy: 127
degree(congress.igraph, mode ="out")[323] #    "   : 157
degree(congress.igraph, mode ="in")[368] # Pelosi: 51
degree(congress.igraph, mode ="out")[368] #   "  : 210
V(congress.igraph)[degree(congress.igraph)==min(degree(congress.igraph))] # Gregoro Sablan (House, D, MP, 69)
V(congress.igraph)$party[396]
degree(congress.igraph, mode = "out")[396] # 2: 1 in one out
V(congress.igraph)[degree(congress.igraph)>147] # top 12
V(congress.igraph)$region[400]
# Don Beyer (House, D, S, M), Sean Casten (House, D, MW, M), Jeff Duncan (House, R, S, M), Tom Emmer (House, R, MW, M), Scott Franklin (House, R, S, M), Steny Hoyer (House, D, S, M), Mike Johnson (House, R, S, M), Andy Levin (House, D, MW, M), Kevin McCarthy (House, R, W, 59, M), Nancy Pelosi (House, D, W, F), Bobby Rush (House, D, MW, M), Steve Scalise (House, R, S, M)
# mostly South (6/12) and Midwest (4/12)
# even repub and dem
V(congress.igraph)[degree(congress.igraph)<12] #  bottom 12
V(congress.igraph)$first_last[357]
# Ron Estes (House, R, MW, M), Kay Granger (House, R, S, F), Josh Harder (House, D, W, M), Gregoro Sablan (House, D, P, 69, M), Kurt Schrader (House, D, W, M), Tom Suozzi (House, D, NE, M), Ed Case (House, D, W, M), Dan Kildee (House, D, MW, M), Ann Kirkpatrick (House, D, W, F), Al Lawson (House, D, S, M), Tom O' Halleran (357) (House, D, W, M), Mike Simpson (House, R, W, M)
# mostly west coast (5/12)
# mostly dem (9/12)
is_simple(congress.igraph) # no loops, simple
V(congress.igraph)[degree(congress.igraph)>180] # top 5
V(congress.igraph)$first_last[209]
E(congress.igraph)[323 %--% 368] # 1 from McCarthy (R) to Pelosi (D)
E(congress.igraph)[323 %--% 394] # 0 from McCarthy to Rush (top tweeter, not tweeted) (D)
E(congress.igraph)[323 %--% 255] # 1 from    "     to Hoyer (D)
E(congress.igraph)[323 %--% 209] # 2 from    "     to Franklin (R)
E(congress.igraph)[368 %--% 394] # 2 from Pelosi to Rush
E(congress.igraph)[255 %--% 394] # 2 from Rush to Hoyer
E(congress.igraph)[368 %--% 255] # 2 from Pelosi to Hoyer
# Franklin (209), Hoyer (255), McCarthy (323), Pelosi (368), Rush (394)
sum(degree(congress.igraph)) / 475 # avg degree = 55.94947
# youngest senator
V(congress.igraph)[V(congress.igraph)$first_last =="Jon Ossoff"]
degree(congress.igraph)[61] # 20
degree(congress.igraph, mode ="out")[61] # 10 and 10
# youngest rep
V(congress.igraph)[V(congress.igraph)$first_last =="Sara Jacobs"]
degree(congress.igraph)[263] # 64
degree(congress.igraph, mode="out")[263] # 28 out, 36 in (pretty even)
# age not a good indicator of tweets
# look at how long they've been in congress as predictor
# longest serving senator
# 46 years
V(congress.igraph)[V(congress.igraph)$first_last =="Patrick Leahy"]
degree(congress.igraph)[49] # 34
degree(congress.igraph, mode="out")[49] # 17/17
# 41 years
V(congress.igraph)[V(congress.igraph)$first_last =="Chuck Grassley"]
degree(congress.igraph)[32] # 43
degree(congress.igraph, mode="out")[32] # 32/0 - not being tweeted about
# newly elected
V(congress.igraph)[V(congress.igraph)$first_last =="Tommy Tuberville"]
degree(congress.igraph)[84] # 23
degree(congress.igraph, mode="out")[84] # 12/11
V(congress.igraph)[V(congress.igraph)$first_last =="Mark Kelly"]
degree(congress.igraph)[44] # 25
degree(congress.igraph, mode="out")[44] # 19/6
# age and time as a congress member not a significant predictor of Twitter interaction between members
# 120 women in 117th congress, 415 men - 1 women in top 12 and 2 women in bottom 12
# graph for kevin mccarthy and who he tweeted/ppl that tweeted him
# top 5 tweeters
V(congress.igraph)[degree(congress.igraph, mode="out")> 88]
V(congress.igraph)$first_last[400]
# Chuck Schumer (S, D, NY, Senate Majority Leader), Kevin McCarthy (House, R, W, 59, M), Nancy Pelosi (House, D, W, F, Speaker of the House), Bobby Rush (House, D, MW, M), Steve Scalise (House, R, S, M, House Majority Whip)
# top 6 being tweeted about
sort(degree(congress.igraph, mode="in"))
V(congress.igraph)[degree(congress.igraph, mode="in")> 106]
V(congress.igraph)$first_last[386]
# Don Beyer (112), Jeff Duncan (191), Scott Franklin (209), Steny Hoyer (255), Kevin McCarthy (323), John Rose (386)
# Kevin McCarthy both most tweeter and tweeted
# disliked bc supports those who he think he cares more about the advancement of his career than the wellbeing of the party
# bottom 5 tweeters
sort(degree(congress.igraph, mode="out"))
V(congress.igraph)[degree(congress.igraph, mode="out")< 2]
V(congress.igraph)$first_last[396]
# Kay Granger (H, R, TX), Ann Kirkpatrick (H, D, AZ), Gregoro Sablan (H, D, MP), Kurt Schrader (H, D, OR), Claudia Tenney (H, R, NY) -- 3/5 women, all house members
# bottom 6 tweeted (all 0's)
sort(degree(congress.igraph, mode="in"))
V(congress.igraph)[degree(congress.igraph, mode="in")< 1]
V(congress.igraph)$first_last[457]
# Chuck Grassley (S, R, IA), Lance Gooden (H, R, TX), Josh Harder (H, D, CA), Tom O'Halleran (H, D, AZ, 78), Tom Suozzi (H, D, NY), Ann Wagner (H, R, MO)
V(congress.igraph)[degree(congress.igraph, mode="in")> 100]
V(congress.igraph)$first_last[368] # "in": Nancy is number 2 (and overall degree and "out"), Bobby Rush number 3
V(congress.igraph)[degree(congress.igraph, mode="out")> 150]
# Sub1
#degree(congress.igraph, mode="in")
edge_density(congress_sub4) # 0.05766332, slightly lower than full network
reciprocity(congress_sub4) # 0.4400871, less than 50%, less than full network
dyad_census(congress_sub4)
transitivity(congress_sub4) # 0.2674326, lower than network; low connectivity
mean_distance(congress_sub4) # 2.663849, pretty low, higher than network
diameter(congress_sub4) # 6
farthest_vertices(congress_sub4) #2 outliers, distance 6, still pretty close
V(congress_sub1)[61]$first_last
# Bill Keating (House, D, MA, 71) and Tony Cardenas (House, D, CA, 61)
is.connected(congress_sub4, mode= "strong") # nope
components(congress_sub4, mode="strong")$no #9, more than network
articulation_points(congress_sub4) # Pete Sessions (House, R, Texas) is a vulnerability point
V(congress_sub1)[169]$first_last
transitivity(congress_sub4, "local") # no one w/ one, no one the center of a triangle, makes sense for our data
#Fast Greedy Subgraph 3
und_con3 <- as.undirected(congress_sub3)
cc3 <- cluster_fast_greedy(und_con3)
#Subgraph 3 Metrics
length(cc3) # 7 communities
sizes(cc3) # 3 ppl in group 6 1 person in group 7
modularity(cc3) # 0.39 less cohesive than sub1, more than sub 2
# Subgraph 3
V(congress_sub3)$community <- cc3$membership
mycomcols <- c("blue", "orange","red","pink", "purple", "yellow", "green") # orange is mostly senate
mylabcols <- c("white", "black", "black", "black", "black")
V(congress_sub3)$color <- mycomcols[V(congress_sub3)$community]
V(congress_sub3)$label.color <- mylabcols[V(congress_sub3)$community]
par(mar=no_marg)
plot(congress_sub3,
vertex.size = 5,
vertex.color = V(congress_sub3)$color,
vertex.label.color = V(congress_sub3)$label.color,
vertex.label.family = "Helvetica",
vertex.frame.color = "white",
vertex.label.cex= 0.4,
edge.color = "gray60",
edge.arrow.size = 0.2,
edge.curved = 0.5,
mark.groups = list(V(congress_sub3)[cc3$membership==1],
V(congress_sub3)[cc3$membership==2],
V(congress_sub3)[cc3$membership==3],
V(congress_sub3)[cc3$membership==4],
V(congress_sub3)[cc3$membership==5],
V(congress_sub3)[cc3$membership==6],
V(congress_sub3)[cc3$membership==7]),
mark.col="gray90", mark.border="black")
#Fast Greedy Subgraph 4
und_con4 <- as.undirected(congress_sub4)
cc4 <- cluster_fast_greedy(und_con4)
#Subgraph 4 Metrics
length(cc4) # 3 communities
sizes(cc4) # pretty even, but group 1 the smallest
modularity(cc4) # 0.42 most cohesive
# Subgraph 4
V(congress_sub4)$community <- cc4$membership
mycomcols <- c("blue", "orange","red")
mylabcols <- c("white", "black", "white")
V(congress_sub4)$color <- mycomcols[V(congress_sub4)$community]
V(congress_sub4)$label.color <- mylabcols[V(congress_sub4)$community]
par(mar=no_marg)
plot(congress_sub4,
vertex.size = 5,
vertex.color = V(congress_sub4)$color,
vertex.label.color = V(congress_sub4)$label.color,
vertex.label.family = "Helvetica",
vertex.frame.color = "white",
vertex.label.cex= 0.4,
edge.color = "gray60",
edge.arrow.size = 0.2,
edge.curved = 0.5,
mark.groups = list(V(congress_sub4)[cc4$membership==1],
V(congress_sub4)[cc4$membership==2],
V(congress_sub4)[cc4$membership==3]),
mark.col="gray90", mark.border="black")
congress.adjacency <- as_adj(congress_sub1)
congress.adjacency
# knit options
knitr::opts_chunk$set(echo = F,
results = 'markup',
fig.width = 4,
fig.height = 3,
fig.align = 'center',
message = F,
warning = F)
# packages
library(tidyverse)
library(faraway)
library(RSQLite)
library(skimr)
library(GGally)
library(tidymodels)
library(leaps)
ball <- dbConnect(drv=RSQLite::SQLite(), dbname="../../data/database.sqlite")
batting <- dbGetQuery(ball, "
SELECT
sum(ab) AS AT_BAT,
player_id,
sum(r) AS RUNS,
sum(hr) AS HOME_RUNS,
sum(triple) AS TRIPLE,
sum(double) AS DOUBLE,
(sum(h) -  sum(hr) - sum(triple) - sum(double)) AS SINGLES,
sum(bb) AS WALKS,
sum(ibb) AS INT_WALKS,
sum(sb) AS STOLEN_BASES,
sum(hbp) AS HIT_BY_PITCH
FROM
batting
where
year > 2000
group by
player_id
")
sumbat <- batting
batting <- subset(batting,batting[,1]>100)
for (x in 3:11)
{
batting[,x] <- batting[,x] / 1
}
set.seed(5)
batting <- sample_n(batting, 500, replace = FALSE)
players <- dbGetQuery(ball, "
SELECT
player_id,
(weight / POWER(height, 2)) *703 AS BMI,
bats as HAND
FROM
player
")
players <- subset(players, players[,2]>0)
for ( x in 1:17918)
{
if(players[x,2] <= 18.5) {players[x,2] <- "U"}
else if(players[x,2] <= 24.9) {players[x,2] <- "H"}
else if(players[x,2] <= 29.9) {players[x,2] <- "O"}
else {players[x,2] <- "B"}
}
batting <-  merge(batting, players, by="player_id" )
ggpairs(batting, columns = 3:13)
# knit options
knitr::opts_chunk$set(echo = F,
results = 'markup',
fig.width = 4,
fig.height = 3,
fig.align = 'center',
message = F,
warning = F)
# packages
library(tidyverse)
library(faraway)
library(RSQLite)
library(skimr)
library(GGally)
library(tidymodels)
library(leaps)
library(glmnet)
ball <- dbConnect(drv=RSQLite::SQLite(), dbname="../../data/database.sqlite")
batting <- dbGetQuery(ball, "
SELECT
sum(ab) AS AT_BAT,
player_id,
sum(r) AS RUNS,
sum(hr) AS HOME_RUNS,
sum(triple) AS TRIPLE,
sum(double) AS DOUBLE,
(sum(h) -  sum(hr) - sum(triple) - sum(double)) AS SINGLES,
sum(bb) AS WALKS,
sum(ibb) AS INT_WALKS,
sum(sb) AS STOLEN_BASES,
sum(hbp) AS HIT_BY_PITCH
FROM
batting
where
year > 2000
group by
player_id
")
sumbat <- batting
batting <- subset(batting,batting[,1]>100)
for (x in 3:11)
{
batting[,x] <- batting[,x] / 1
}
set.seed(5)
batting <- sample_n(batting, 500, replace = FALSE)
players <- dbGetQuery(ball, "
SELECT
player_id,
(weight / POWER(height, 2)) *703 AS BMI,
bats as HAND
FROM
player
")
players <- subset(players, players[,2]>0)
for ( x in 1:17918)
{
if(players[x,2] <= 18.5) {players[x,2] <- "U"}
else if(players[x,2] <= 24.9) {players[x,2] <- "H"}
else if(players[x,2] <= 29.9) {players[x,2] <- "O"}
else {players[x,2] <- "B"}
}
batting <-  merge(batting, players, by="player_id" )
fmod <- lm(RUNS ~ HOME_RUNS + TRIPLE + DOUBLE + SINGLES + WALKS + INT_WALKS + STOLEN_BASES + HIT_BY_PITCH, data=batting)
summary(fmod)
# installing necessary packages
install.packages("rlang")
install.packages("RSQLite")
install.packages("Rtools")
install.packages("corrr")
